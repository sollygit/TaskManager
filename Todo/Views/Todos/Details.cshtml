@model Todo
@using Todo.Authorization
@using Todo.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService


@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Todo Item</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>
@if (Model.Status != TodoStatus.InProgress)
{
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, TodoOperations.Start)).Succeeded)
    {
        <form asp-action="SetStatus" asp-controller="Todos" style="display:inline;">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@TodoStatus.InProgress" />
            <button type="submit" class="btn btn-sm btn-success">Work on Task</button>
        </form>
    }
}
@if (Model.Status != TodoStatus.Done)
{
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, TodoOperations.Finish)).Succeeded)
    {
        <form asp-action="SetStatus" asp-controller="Todos" style="display:inline;">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@TodoStatus.Done" />
            <button type="submit" class="btn btn-sm btn-danger">Finish Task</button>
        </form>
    }
}
<div class="back-to-list">
    <a asp-action="Index">Back to List</a>
</div>